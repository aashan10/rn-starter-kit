variables:
  RELEASE_KEYSTORE: $RELEASE_KEYSTORE
  RELEASE_KEYSTORE_PASSWORD: $RELEASE_KEYSTORE_PASSWORD
  RELEASE_KEY_ALIAS: $RELEASE_KEYSTORE_ALIAS
  RELEASE_KEY_PASSWORD: $RELEASE_KEY_PASSWORD

stages:
  - prepare
  - test
  - build
  - release

prepare-node-environment:
  stage: prepare
  allow_failure: false
  script:
    - curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
    - sudo apt-get install -y nodejs
    # install yarn
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    - sudo apt update && sudo apt install yarn

prepare-android-environment:
  stage: prepare
  allow_failure: false
  script:
    # install JDK
    - sudo apt-get install libc6-dev-i386 lib32z1 openjdk-8-jdk
    - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

    # install android sdk platform tools
    - curl https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -L -o android_sdk.zip
    - mkdir android_sdk && unzip android_sdk.zip -d ./android_sdk/
    - export ANDROID_HOME=$(pwd)/android_sdk
    - export PATH=$PATH:$ANDROID_HOME/bin


download-signing-keystore:
  stage: prepare
  variables:
    SECURE_FILE_DOWNLOAD_PATH: './android/app/'
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/devops-for-mobile-apps/load-secure-files/-/raw/main/installer" | bash

test-js:
  stage: test
  needs:
    - prepare-node-environment
  script:
    - echo "Starting tests..."
    #TODO: Actually do some stuff here
    - echo "Tests executed!"

build-release-aab:
  stage: build
  needs:
    - test-js
    - prepare-android-environment
    - download-signing-keystore
  script:
    - cd android && ./gradlew bundleRelease

build-release-apk:
  stage: build
  needs:
    - test-js
    - prepare-android-environment
    - download-signing-keystore
  script:
    - cd android && ./gradlew assembleRelease

publish-artifacts:
  stage: release
  needs:
    - build-release-aab
    - build-release-apk
  script:
    - zip -r release-apks.zip ./android/app/builds/apk/release/
    - zip -r release-aab.zip ./android/app/builds/bundle/release/
  artifacts:
    paths:
      - ./release-apks.zip
      - ./release-aab.zip

push-to-play-store:
  stage: release
  needs:
    - build-release-aab
  script:
    - echo "TODO => Find a mechanism to upload aab file to play store in internal testing channel"
